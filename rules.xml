<?xml version="1.0" encoding="ISO-8859-1"?>
<rules>  
<!-- Generic Rules -->
  <rule key="Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceAfterBracket" priority="MINOR">
    <category name="Generic" />
    <name>Tag comment incorrectly indented</name>
    <configKey>Generic/Functions</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps" priority="MAJOR">
    <category name="Generic" />
    <name>Tag comment incorrectly indented</name>
    <configKey>Generic/NamingConventions</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Generic.NamingConventions.CamelCapsFunctionName.MethodDoubleUnderscore" priority="MAJOR">
    <category name="Generic" />
    <name>Tag comment incorrectly indented</name>                                                                                                                                  
    <configKey>Generic/NamingConventions</configKey>                                                                                                                               
    <description>@category tag comment incorrectly indented</description>                                                                                                          
  </rule>
  <rule key="Generic.PHP.LowerCaseKeyword.Found" priority="MINOR">
    <category name="Generic" />
    <name>Lower Case Keyword Found</name>                                                                                                                                  
    <configKey>Generic/PHP.LowerCaseKeyword.Found</configKey>                                                                                                                               
    <description>@category Key words should be all upper case!</description>                                                                                                          
  </rule>
  <rule key="Generic.PHP.DeprecatedFunctions.Deprecated" priority="MINOR">
    <category name="Generic" />
    <name>Deprecated Functions</name>                                                                                                                                  
    <configKey>Generic/PHP.LowerCaseKeyword.Found</configKey>                                                                                                                               
    <description>@category Look at removing this function!</description>                                                                                                          
  </rule>
  <rule key="Generic.WhiteSpace.ScopeIndent.IncorrectExact" priority="MINOR">
    <category name="Generic" />
    <name>White Space Scope Indent Incorrect Exact</name>                                                                                                                                  
    <configKey>Generic/WhiteSpace</configKey>                                                                                                                               
    <description>@category White Space Scope Indent Incorrect Exact</description>                                                                                                          
  </rule>
  <rule key="Generic.WhiteSpace.DisallowTabIndent.NonIndentTabsUsed" priority="MINOR">
    <category name="Generic" />
    <name>White Space Disallow Tab Indent Non Indent Tabs Used</name>                                                                                                                                  
    <configKey>Generic/WhiteSpace</configKey>                                                                                                                               
    <description>@category Remove Non Indent Tabs Used</description>                                                                                                          
  </rule>
<!-- PSR1 Rules -->                                                                                                                                                                
  <rule key="PSR1.Methods.CamelCapsMethodName.NotCamelCaps" priority="MAJOR">
    <category name="PSR1" />
    <name>Method name not in camel cap</name>
    <configKey>PSR1/method</configKey>
    <description>@category Camel caps needed on method name</description>
  </rule>
  <rule key="PSR1.Classes.ClassDeclaration.MissingNamespace" priority="MAJOR">
    <category name="PSR1" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR1/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR1.Files.SideEffects.FoundWithSymbols" priority="MAJOR">
    <category name="PSR1" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR1/Files</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR1.Classes.ClassDeclaration.MultipleClasses" priority="MAJOR">
    <category name="PSR1" />
    <name>Class Declaration Multiple Classes</name>
    <configKey>PSR1/Classes</configKey>
    <description>@category File should only declare one class</description>
  </rule>
<!-- PSR2 Rules -->
  <rule key="PSR2.Classes.PropertyDeclaration" priority="MINOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.PropertyDeclaration.Multiple" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.PropertyDeclaration.VarUsed" priority="MAJOR">
    <category name="PSR2" />
    <name>Classes Property Declaration Var Used</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category Don't use var in a class, this is PHP 5 and its 2014!</description>
  </rule>
  <rule key="PSR2.ControlStructures.ElseIfDeclaration.NotAllowed" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.OpenBraceNewLine" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.SpaceBeforeColondefault" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.SpaceBetweenCase" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.SpaceBeforeBrace" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Files.EndFileNewline.NoneFound" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.OpenBraceNotAlone" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Files.EndFileNewline.TooMany" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Methods.MethodDeclaration.StaticBeforeVisibility" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.SpaceAfterName" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.BreakIndent" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Namespaces.UseDeclaration.SpaceAfterLastUse" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.defaultIndent" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Namespaces.NamespaceDeclaration.BlankLineAfter" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.caseNotLower" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.SpaceBeforeColoncase" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Methods.MethodDeclaration.AbstractAfterVisibility" priority="MAJOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.caseIndent" priority="MINOR">
    <category name="PSR2" />
    <name>Tag comment incorrectly indented</name>
    <configKey>PSR2/ControlStructures</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.SpaceBeforeOpenBracket" priority="MINOR">
    <category name="PSR2" />
    <name>Space Before Open Bracket</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Remove the space before the opening bracket in the method call</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket" priority="MINOR">
    <category name="PSR2" />
    <name>Space Before Close Bracket</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Remove the space before the close bracket in the method call</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.ContentAfterOpenBracket" priority="MINOR">
    <category name="PSR2" />
    <name>Content After Open Bracket</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Move the content on the same line as the opening bracket</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.Indent" priority="MINOR">
    <category name="PSR2" />
    <name>Indent</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Indent issue in function signature</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.CloseBracketLine" priority="MINOR">
    <category name="PSR2" />
    <name>Close Bracket Line</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Put close bracket on its own line</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket" priority="MINOR">
    <category name="PSR2" />
    <name>Space After Open Bracket</name>
    <configKey>PSR2/Methods/Function Call Signature</configKey>
    <description>@category Remove space after opening bracket</description>
  </rule>
  <rule key="PSR2.Methods.MethodDeclaration.Underscore" priority="MINOR">
    <category name="PSR2" />
    <name>Space After Open Bracket</name>
    <configKey>PSR2/MethodDeclaration</configKey>
    <description>@category Issue with the underscore?</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.WrongOpenercase" priority="MINOR">
    <category name="PSR2" />
    <name>Switch Declaration Wrong Openercase</name>
    <configKey>PSR2/ControlStructures.SwitchDeclaration.WrongOpenercase</configKey>
    <description>@category case should be lower case?</description>
  </rule>
  <rule key="PSR2.Classes.PropertyDeclaration.Underscore" priority="MAJOR">
    <category name="PSR2" />
    <name>Property Declaration Underscore</name>
    <configKey>PSR2/Classes.PropertyDeclaration.Underscore</configKey>
    <description>@category No underscore in class property as they are not needed!</description>
  </rule>
  <rule key="PSR2.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace" priority="MINOR">
    <category name="PSR2" />
    <name>Space Before Close Brace</name>
    <configKey>PSR2/ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace</configKey>
    <description>@category Remove space before close brase!</description>
  </rule>
  <rule key="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace" priority="MINOR">
    <category name="PSR2" />
    <name>Spacing After Open Brace</name>
    <configKey>PSR2/ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace</configKey>
    <description>@category Remove space after opening brace!</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.CloseBraceSameLine" priority="MINOR">
    <category name="PSR2" />
    <name>Close Brace Same Line</name>
    <configKey>PSR2/Classes.ClassDeclaration.CloseBraceSameLine</configKey>
    <description>@category Braces should be on separate lines!</description>
  </rule>
  <rule key="PSR2.Namespaces.UseDeclaration.MultipleDeclarations" priority="MINOR">
    <category name="PSR2" />
    <name>Multiple Use Declarations</name>
    <configKey>PSR2/Namespaces.UseDeclaration.MultipleDeclarations</configKey>
    <description>@category Tidy up Use Declarations?</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.ImplementsLine" priority="MINOR">
    <category name="PSR2" />
    <name>Class Declaration Implements Line</name>
    <configKey>PSR2/Classes.ClassDeclaration.ImplementsLine</configKey>
    <description>@category Braces should be on separate lines!</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.TerminatingComment" priority="MINOR">
    <category name="PSR2" />
    <name>Switch Declaration Terminating Comment</name>
    <configKey>PSR2/ControlStructures.SwitchDeclaration.TerminatingComment</configKey>
    <description>@category Tidy up Use Declarations?</description>
  </rule>
  <rule key="PSR2.Methods.FunctionCallSignature.MultipleArguments" priority="MAJOR">
    <category name="PSR2" />
    <name>Function Call Signature Multiple Arguments</name>
    <configKey>PSR2/Methods.FunctionCallSignature.MultipleArguments</configKey>
    <description>@category Tidy up Use Declarations?</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.ExtendsLine" priority="MINOR">
    <category name="PSR2" />
    <name>Class Declaration Extends Line</name>
    <configKey>PSR2/Classes.ClassDeclaration.ExtendsLine</configKey>
    <description>@category Tidy up Use Declarations?</description>
  </rule>
  <rule key="PSR2.Classes.PropertyDeclaration.ScopeMissing" priority="CRITICAL">
    <category name="PSR2" />
    <name>Property Declaration Scope Missing</name>
    <configKey>PSR2/Classes.PropertyDeclaration.ScopeMissing</configKey>
    <description>@category Add scope to the class property</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.SpaceBeforeName" priority="MINOR">
    <category name="PSR2" />
    <name>Class Declaration Space Before Name</name>
    <configKey>PSR2/Classes.ClassDeclaration.SpaceBeforeName</configKey>
    <description>@category Remove space before class name</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.SpaceBeforeComma" priority="MINOR">
    <category name="PSR2" />
    <name>Class Declaration Space Before Comma</name>
    <configKey>PSR2/Classes.ClassDeclaration.SpaceBeforeComma</configKey>
    <description>@category Remove space before comma</description>
  </rule>
  <rule key="PSR2.ControlStructures.SwitchDeclaration.WrongOpenerdefault" priority="MAJOR">
    <category name="PSR2" />
    <name>Switch Declaration Wrong Opener default</name>
    <configKey>PSR2/ControlStructures.SwitchDeclaration.WrongOpenerdefault</configKey>
    <description>@category Switch incorrect</description>
  </rule>
  <rule key="PSR2.Files.ClosingTag.NotAllowed" priority="MAJOR">
    <category name="PSR2" />
    <name>Closing Tag Not Allowed</name>
    <configKey>PSR2/Files</configKey>
    <description>@category Closing Tag Not Allowed</description>
  </rule>
  <rule key="PSR2.Classes.ClassDeclaration.SpaceBeforeImplements" priority="MAJOR">
    <category name="PSR2" />
    <name>Class Declaration Space Before Implements</name>
    <configKey>PSR2/Classes</configKey>
    <description>@category Class Declaration remove Space Before Implements</description>
  </rule>
<!-- Squiz Rules -->
  <rule key="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseParenthesis" priority="MAJOR">
    <category name="Squiz" />
    <name>Space After Close Parenthesis.</name>
    <configKey>Squiz/Arrays</configKey>
    <description>@category Remove Space After Close Parenthesis.</description>
  </rule>
  <rule key="Squiz.ControlStructures.ControlSignature.NewlineAfterOpenBrace" priority="MAJOR">
    <category name="Squiz" />
    <name>Newline After Open Brace.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Remove Newline After Open Brace.</description>
  </rule>
  <rule key="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace" priority="MAJOR">
    <category name="Squiz" />
    <name>Space After Close Brace.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Remove SpaceA fter Close Brace.</description>
  </rule>
  <rule key="Squiz.ControlStructures.ControlSignature.SpaceAfterKeyword" priority="MAJOR">
    <category name="Squiz" />
    <name>Space After Keyword.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Remove Space After Keyword.</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterBrace" priority="MAJOR">
    <category name="Squiz" />
    <name>Content After Brace.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Remove Content After Brace.</description>
  </rule>
  <rule key="Squiz.Arrays.ArrayDeclaration.CommaAfterLast" priority="MAJOR">
    <category name="Squiz" />
    <name>Array Declaration Comma After Last.</name>
    <configKey>Squiz/Arrays</configKey>
    <description>@category Remove last comma from array declaration.</description>
  </rule>
  <rule key="Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColonCase" priority="MAJOR">
    <category name="Squiz" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Squiz.WhiteSpace.SuperfluousWhitespace.StartFile" priority="MAJOR">
    <category name="Squiz" />
    <name>Superfluous Whitespace Start File.</name>
    <configKey>Squiz/WhiteSpace</configKey>
    <description>@category Remove white space at start of the file.</description>
  </rule>
  <rule key="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine" priority="MAJOR">
    <category name="Squiz" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Squiz/WhiteSpace</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.BraceIndent" priority="MAJOR">
    <category name="Squiz" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Squiz/Functions</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine" priority="MAJOR">
    <category name="Squiz" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Squiz/Functions</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Squiz.ControlStructures.ControlSignature" priority="MAJOR">
    <category name="Squiz" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Squiz/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterFunction" priority="MINOR">
    <category name="Squiz" />
    <name>Space After Function</name>
    <configKey>Squiz/Functions.MultiLineFunctionDeclaration.SpaceAfterFunction</configKey>
    <description>@category Remove the space after function</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.SpaceAfterBracket" priority="MINOR">
    <category name="Squiz" />
    <name>Space After Bracket</name>
    <configKey>Squiz/Functions.MultiLineFunctionDeclaration.SpaceAfterBracket</configKey>
    <description>@category Remove the space after bracket</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace" priority="MINOR">
    <category name="Squiz" />
    <name>Newline Before Open Brace</name>
    <configKey>Squiz/Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace</configKey>
    <description>@category Remove new line before open brace</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.Indent" priority="MINOR">
    <category name="Squiz" />
    <name>Indent</name>
    <configKey>Squiz/Functions.MultiLineFunctionDeclaration.Indent</configKey>
    <description>@category Sort function indentation out.</description>
  </rule>
  <rule key="Squiz.Functions.MultiLineFunctionDeclaration.CloseBracketLine" priority="MINOR">
    <category name="Squiz" />
    <name>Close Bracket Line</name>
    <configKey>Squiz/Functions.MultiLineFunctionDeclaration.CloseBracketLine</configKey>
    <description>@category Put close bracket on its own line.</description>
  </rule>
  <rule key="Squiz.Functions.FunctionDeclaration" priority="MINOR">
    <category name="Squiz" />
    <name>Function Declaration</name>
    <configKey>Squiz/Functions.FunctionDeclaration</configKey>
    <description>@category Put a function declaration in</description>
  </rule>

<!-- Drupal Rules -->
  <rule key="Drupal.Functions.FunctionDeclaration.SpaceBeforeParenthesis" priority="MINOR">
    <category name="Drupal" />
    <name>Function Declaration Space Before Parenthesis</name>
    <configKey>Drupal/Functions</configKey>
    <description>@category Remove space before parenthesis!</description>
  </rule>
  <rule key="Drupal.Functions.DiscouragedFunctions.Discouraged" priority="MAJOR">
    <category name="Drupal" />
    <name>Using a discouraged functions</name>
    <configKey>Drupal/Functions</configKey>
    <description>@category Remove and find another safer say of doing this code.</description>
  </rule>
  <rule key="Drupal.WhiteSpace.OperatorSpacing.NoSpaceAfter" priority="MINOR">
    <category name="Drupal" />
    <name>No Space After</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Add space after the operator!</description>
  </rule>
  <rule key="Drupal.WhiteSpace.OperatorSpacing.SpacingAfter" priority="MINOR">
    <category name="Drupal" />
    <name>Space After operator</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Remove space after the operator!</description>
  </rule>
  <rule key="Drupal.WhiteSpace.OperatorSpacing.SpacingBefore" priority="MINOR">
    <category name="Drupal" />
    <name>Space before operator</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Remove space before the operator!</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.NotLiteralString" priority="MAJOR">
    <category name="Drupal" />
    <name>Not Literal String</name>
    <configKey>Drupal/Semantics</configKey>
    <description>@category Not Sure about this one.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.EmptyString" priority="MAJOR">
    <category name="Drupal" />
    <name>Function Call Empty String.</name>
    <configKey>Drupal/Semantics</configKey>
    <description>@category Not Sure about this one.</description>
  </rule>
  <rule key="Drupal.WhiteSpace.OperatorSpacing.NoSpaceBefore" priority="MINOR">
    <category name="Drupal" />
    <name>No Space Before</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Add space before the operator!</description>
  </rule>
  <rule key="Drupal.WhiteSpace.ScopeClosingBrace.BreakIdent" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.SeePunctuation" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Commenting Function Comment See Punctuation.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Commenting function comment see punctuation.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ContentAfterOpen" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.Empty" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.$InReturnType" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Commenting FunctionComment $InReturnType.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ExtraParamComment" priority="MAJOR">
    <category name="Drupal" />
    <name>Commenting has extra param</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Remove extra param in comment header.</description>
  </rule>
  <rule key="Drupal.Formatting.SpaceInlineIf.NoSpaceAfter" priority="MINOR">
    <category name="Drupal" />
    <name>Space In line If: No Space After.</name>
    <configKey>Drupal/Formatting</configKey>
    <description>@category Put space after inline IF statement.</description>
  </rule>
  <rule key="Drupal.Formatting.SpaceInlineIf.NoSpaceBefore" priority="MINOR">
    <category name="Drupal" />
    <name>Space In line If: No Space before.</name>
    <configKey>Drupal/Formatting</configKey>
    <description>@category Put space before inline IF statement.</description>
  </rule>
  <rule key="Drupal.Formatting.SpaceColon.NoSpaceAfter" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.Br.XHTMLBr" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.WhiteSpace.ScopeClosingBrace.Indent" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.Concat" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Array.Array.ArrayClosingIndentation" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.InvalidReturnTypeName" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.FunctionAlias" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.InstallHooks.InstallHook" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.ControlStructures.ElseCatchNewline.ElseNewline" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.ControlStructures.InlineControlStructure.NotAllowed" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal control structures inline control structure not allowed.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Inline control structure not allowed.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.HookReturnDoc" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ShortNotCapital" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.MissingReturnType" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.MissingShort" priority="MINOR">
    <category name="Drupal" />
    <name>Function Comment Missing Short.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Not Sure about this one.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ParamCommentIndentation" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ShortStartSpace" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Commenting Function Comment ShortStartSpace.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Fix function comment.</description>
  </rule>
  <rule key="Drupal.Strings.UnnecessaryStringConcat.Found" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.HookParamDoc" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.MissingParamType" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.ControlStructures.ElseIf" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.LArg" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.TInHookMenu.TFound" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>  
  <rule key="Drupal.WhiteSpace.ScopeIndent.IncorrectExact" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.WatchdogT" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.FunctionCall.WhiteSpace" priority="MINOR">
    <category name="Drupal" />
    <name>Function Call White Space.</name>
    <configKey>Drupal/Semantics</configKey>
    <description>@category Remove extra white space in function call.</description>
  </rule>
  <rule key="Drupal.WhiteSpace.ScopeIndent.Incorrect" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ShortSingleLine" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Semantics.EmptyInstall.EmptyInstall" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ShortFullStop" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.InvalidParamTypeName" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidGlobal.GlobalUnderScore" priority="MAJOR">
    <category name="Drupal" />
    <name>Valid Global: Global Under Score.</name>
    <configKey>Drupal/NamingConventions</configKey>
    <description>@category Remove Global under score usage.</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidFunctionName.ScopeNotLowerCamel" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/NamingConventions</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidFunctionName.NotLowerCamel" priority="MAJOR">
    <category name="Drupal" />
    <name>Valid Function Name Not Lower Camel</name>
    <configKey>Drupal/NamingConventions</configKey>
    <description>@category Change function name to be lover camel case.</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidVariableName.LowerCamelName" priority="MAJOR">
    <category name="Drupal" />
    <name>Lower Camel Name not valid variable name</name>
    <configKey>Drupal/NamingConventions</configKey>
    <description>@category Fix the camel case variable name.</description>
  </rule>
  <rule key="Drupal.ControlStructures.ElseCatchNewline" priority="MAJOR">
    <category name="Drupal" />
    <name>Checks that else/elseif/catch statements start on a new line.</name>
    <configKey>Drupal/ControlStructures</configKey>
    <description>@category Checks that else/elseif/catch statements start on a new line.</description>
  </rule>
  <rule key="Drupal.WhiteSpace.ScopeIndent" priority="MINOR">
    <category name="Drupal" />
    <name>Drupal WhiteSpace ScopeIndent</name>
    <configKey>Drupal/WhiteSpace</configKey>
    <description>@category Largely copied from Generic_Sniffs_Whitespace_ScopeIndentSniff, modified to make the exact mode working with comments and multi line statements.</description>
  </rule>
  <rule key="Drupal.Array.Array" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Array.Array.ArrayIndentation" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Array.Array.LongLineDeclaration" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Classes.InterfaceName.InterfaceSuffix" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Classes Interface Name Interface Suffix</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category Interface name interface suffix incorrect</description>
  </rule>
  <rule key="Drupal.Classes.ClassDeclaration" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Classes Class Declaration</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category Class Declaration incorrect.</description>
  </rule>
  <rule key="Drupal.Classes.ClassCreateInstance" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.DocCommentAlignment.BlankLine" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.DocCommentAlignment.SpaceBeforeAsterisk" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.DocCommentAlignment.SpaceBeforeTag" priority="MINOR">
    <category name="Drupal" />
    <name>Doc Comment Alignment Space Before Tag</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Remove space before tag</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment.DescriptionMissing" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment.Missing" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment.SpacingAfter" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment.WrongStyle" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FileComment.WrongStyle" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.InvalidParamType" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.InvalidReturnType" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.Missing" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.ControlStructures.ControlSignature" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.ControlStructures.ElseNewline.ElseNewline" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Formatting.DisallowCloseTag.FinalClose" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Formatting.SpaceColon" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.MissingParamComment" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.MissingReturnComment" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ParamCommentNewLine" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ParamNameNoMatch" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.ReturnCommentNewLine" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.SpacingAfterParams" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.SpacingBeforeReturnType" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Commenting Function Comment Spacing Before Return Type</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category Function Comment Spacing Before Return Type</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.SpacingBeforeParamType" priority="MAJOR">
    <category name="Drupal" />
    <name>Drupal Commenting Function Comment Spacing Before Param Type</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category Function Comment Spacing Before Param Type incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.SpacingBeforeParams" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.WrongEnd" priority="MINOR">
    <category name="Drupal" />
    <name>Function Comment Wrong End</name>
    <configKey>Drupal/Commenting</configKey>
    <description>@category Not sure about this one.</description>
  </rule>
  <rule key="Drupal.Commenting.FunctionComment.WrongStyle" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.DocBlock" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.InvalidEndChar" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.NoSpaceBefore" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.NotCapital" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.SpacingAfter" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.SpacingBefore" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Commenting.InlineComment.WrongStyle" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.ControlStructures.TemplateControlStructure.CurlyBracket" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Files.LineLength.TooLong" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Formatting.MultiLineAssignment" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Formatting.SpaceOperator" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidVariableName" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>Drupal/Naming Conventions</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidClassName.NoUnderscores" priority="MAJOR">
    <category name="Drupal" />
    <name>Valid Class Name No Underscores</name>
    <configKey>Drupal/Naming Conventions</configKey>
    <description>@category Remove underscores from class name</description>
  </rule>
  <rule key="Drupal.NamingConventions.ValidClassName.StartWithCaptial" priority="MAJOR">
    <category name="Drupal" />
    <name>Valid Class Name Start With Captial</name>
    <configKey>Drupal/Naming Conventions</configKey>
    <description>@category Class name should start with a captial letter.</description>
  </rule>
  <rule key="Drupal.Semantics.LStringTranslatable.LArg" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.Strings.ConcatenationSpacing.Missing" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.CloseBracketSpacing.ClosingWhitespace" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.EmptyLines.EmptyLines" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.FileEnd.FileEnd" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.LineEnding.EndLine" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.OpenBracketSpacing.OpeningWhitespace" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
  <rule key="Drupal.WhiteSpace.ScopeClosingBrace" priority="MAJOR">
    <category name="Drupal" />
    <name>Tag comment incorrectly indented</name>
    <configKey>TAG_INDENT</configKey>
    <description>@category tag comment incorrectly indented</description>
  </rule>
<!-- Security Rules -->
  <rule key="Security.Drupal7.HttpRequest.D7HttpRequestSSL" priority="MAJOR">
    <category name="Security" />
    <name>Verify that drupal_http_request uses HTTPS and is called with verify_peer in order to validate the certificate</name>
    <configKey>Security/HttpRequest</configKey>
    <description>@category Verify that drupal_http_request uses HTTPS and is called with verify_peer in order to validate the certificate</description>
  </rule>
  <rule key="Security.Drupal7.HttpRequest.D7HttpRequestUserInputErr" priority="MAJOR">
    <category name="Security" />
    <name>drupal_http_request called with variable $url</name>
    <configKey>Security/HttpRequest</configKey>
    <description>@category drupal_http_request called with variable $url</description>
  </rule>
  <rule key="Security.Drupal7.XSSHTMLConstruct.D7XSSHTMLConstructWarn" priority="MAJOR">
    <category name="Security" />
    <name>HTML construction with $key detected.</name>
    <configKey>Security/XSSHTMLConstruct</configKey>
    <description>@category HTML construction with $key detected.</description>
  </rule>
  <rule key="Security.Drupal7.UserInputWatch.D7UserInWaWarn" priority="MAJOR">
    <category name="Security" />
    <name>User input detetected with $_COOKIE.</name>
    <configKey>Security/UserInputWatch</configKey>
    <description>@category User input detetected with $_COOKIE.</description>
  </rule>
  <rule key="Security.BadFunctions.CryptoFunctions.WarnCryptoFunc" priority="CRITICAL">
    <category name="Security" />
    <name>Crypto function base64_encode used.</name>
    <configKey>Security/CryptoFunctions</configKey>
    <description>@category Crypto function base64_encode used.</description>
  </rule>
  <rule key="Security.Drupal7.UserInputWatch.D7UserInWaFormWarn" priority="MINOR">
    <category name="Security" />
    <name>At least 10 possible user input detetected with $form.</name>
    <configKey>Security/UserInputWatch</configKey>
    <description>@category At least 10 possible user input detetected with $form.</description>
  </rule>
  <rule key="Security.Drupal7.XSSFormValue.D7XSSErrFormValue" priority="CRITICAL">
    <category name="Security" />
    <name>XSS found with #value on arg</name>
    <configKey>Security/XSSFormValue</configKey>
    <description>@category XSS found with #value on arg</description>
  </rule>
  <rule key="Security.Drupal7.XSSFormValue.D7XSSWarFormValue" priority="CRITICAL">
    <category name="Security" />
    <name>Potential XSS found with #value on form field</name>
    <configKey>Security/XSSFormValue</configKey>
    <description>@category Potential XSS found with #value on 'Add to basket'</description>
  </rule>
  <rule key="Security.Drupal7.XSSHTMLConstruct.D7XSSHTMLConstructWarnF" priority="MAJOR">
    <category name="Security" />
    <name>HTML construction with header() detected.</name>
    <configKey>Security/XSSHTMLConstruct</configKey>
    <description>@category HTML construction with header() detected.</description>
  </rule>
  <rule key="Security.Drupal7.UserInputWatch.D7UserInWaFormStateWarn" priority="MINOR">
    <category name="Security" />
    <name>At least 10 possible user input detetected with $form_state.</name>
    <configKey>Security/UserInputWatch</configKey>
    <description>@category At least 10 possible user input detetected with $form_state.</description>
  </rule>
  <rule key="Security.Drupal7.DynQueries.D7DynQueriesWarn" priority="CRITICAL">
    <category name="Security" />
    <name>Potential SQL injection in fields with param #1</name>
    <configKey>Security/DynQueries</configKey>
    <description>@category Potential SQL injection in fields with param #1</description>
  </rule>
  <rule key="Security.Drupal7.DynQueries.D7DynQueriesDirectVar" priority="CRITICAL">
    <category name="Security" />
    <name>Potential SQL injection with direct variable usage in fields with param #1</name>
    <configKey>Security/DynQueries</configKey>
    <description>@category Potential SQL injection with direct variable usage in fields with param #1</description>
  </rule>
  <rule key="Security.BadFunctions.EasyXSS.EasyXSSwarn" priority="MAJOR">
    <category name="Security" />
    <name>Possible XSS detected with VAR on print</name>
    <configKey>Security/EasyXSS</configKey>
    <description>@category Possible XSS detected with VAR on print; see logs for the var</description>
  </rule>
  <rule key="Security.Drupal7.DbQueryAC.D7DbQueryACErr" priority="MAJOR">
    <category name="Security" />
    <name>EntityFieldQuery with entity type node should be tagged for access restrictions</name>
    <configKey>Security/DbQueryAC</configKey>
    <description>@category EntityFieldQuery with entity type node should be tagged for access restrictions</description>
  </rule>
</rules>
